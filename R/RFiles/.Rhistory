install.packages("g.data")
install.packages(xlsx)
"xlsx"
install.packages("xlsx")
install.packages("g.data")
install.packages("g.data")
install.packages(rtools)
install.packages("g.data")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
Sys.which("make")
Sys.which("make")
install.packages("g.data")
install.packages("xlsx")
My_funcion<- function(){}
prin
My_funcion<- function(){}
My_funcion<- function(){print("hello world")}
My_funcion()
My_funcion<- function(number){print(number)}
My_funcion(1:10)
My_funcion<- function(number<-1:5){print(number)}
My_funcion<- function(number <- 1:5){print(number)}
My_funcion<- function(number <- c(1:5)){print(number)}
My_funcion<- function(number = c(1:5)){print(number)}
My_funcion<- function(number = 1:5){print(number)}
My_funcion()
My_funcion(1:10)
My_funcion<- function(number){print(number)}
fn<-My_funcion()
fn<-My_funcion(5)
fn(10)
fn = My_funcion()
My_funcion<- function(number){return(number)}
fn = My_funcion()
fn = My_funcion(8)
fn
fn(10)
Outer_func <- function(x) {
Inner_func <- function(y) {
a <- x + y
return(a)
}
return (Inner_func)
}
output <- Outer_func(3) # To call the Outer_func
output(5)
output(10)
print(c(1:2,.1))
print(c(1:2,.1,.1))
liabrary
install.packages("readxl")
library(readxl)
getwd()
setwd("d:/ds/r/rfiles")
getwd()
ls
getwd
getwd()
setwd("d:/DS/R/RFiles")
getwd()
getwd()
BankCustomer <- read_excel("d:/DS/R/RFiles/excels/Bank_Data_3_2.csv")
BankCustomer <- read.csv("d:/DS/R/RFiles/excels/Bank_Data_3_2.csv")
head(BankCustomer)
str(BankCustomer)
setwd(choose())
setwd(choose.dir())
BankCustomer2 <- read.csv("d:/DS/R/RFiles/excels/Bank_Data_3_2.csv", stringsAsFactors = TRUE)
str(BankCustomer2)
BankCustomer2 <- read.csv("d:/DS/R/RFiles/excels/Bank_Data_3_2.csv", stringsAsFactors = FALSE)
str(BankCustomer2)
vec <- 1:9
vec
m1 <- matrix(vec,nrow = 3,ncol = 3,byrow = TRUE)
m1
apply(m,1,sum)
apply(m1,1,sum)
apply(m1,2,sum)
lapply(vec, mean)
lapply(vec, median)
lapply(vec, median)
vec <- c(1:9)
lapply(vec, median)
lapply(vec, sum)
lapply(vec, sum)
vec <- list(c(1:9))
lapply(vec, sum)
lapply(vec, mean)
lapply(vec, median)
lapply(vec, median)
sapply(vec, median)
sapply(vec, sum)
sapply(vec, sum)
vec <- list(c(1:9),c(10:18))
sapply(vec, sum)
apply(m1,2,sum)
m1 <- matrix(vec,nrow = 3,ncol = 3,byrow = TRUE)
m1 <- matrix(vec,nrow = 6,ncol = 3,byrow = TRUE)
m1
vec
mtcars
str(mtcars)
select(mtcars,mpg:vs)
library(dplyr)
select(mtcars,mpg:vs)
head(select(mtcars,mpg:vs))
head(select(mtcars,mpg:vs,am,gear))
iris
str(iris)
read.csv("d:/ds/r/rfiles/excel/Bank_Data_3_2.csv")
read.csv("d:/DS/R/RFiles/excel/Bank_Data_3_2.csv")
read.csv("D:/DS/R/RFiles/excel/Bank_Data_3_2.csv")
read.csv("d:/ds/r/rfiles/excels/Bank_Data_3_2.csv")
BankCustomer<-read.csv("d:/ds/r/rfiles/excels/Bank_Data_3_2.csv")
rename(BankCustomer,c("Age" = "C_Age"))
rename(BankCustomer,c("Age" = "C_Age"))
rename(BankCustomer,c("Age" = "CAge"))
library(plyr)
rename(BankCustomer,c("Age" = "CAge"))
str(BankCustomer)
BankCustomer<-rename(BankCustomer,c("Age" = "CAge"))
str(BankCustomer)
BankCustomer<-rename(BankCustomer,c("age" = "CAge"))
str(BankCustomer)
View(BankCustomer)
BankCustomer<-rename(BankCustomer,c("CAge" = "age"))
View(BankCustomer)
max(BankCustomer$age)
min(BankCustomer$age)
BankCustomerAgeCategorized<-transform(BankCustomer$age,ifelse(age<22,"Z",ifelse(age<41,"Y",ifelse(age<53,"X","Baby Boomers"))))
BankCustomerAgeCategorized<-transform(BankCustomer,ifelse(age<22,"Z",ifelse(age<41,"Y",ifelse(age<53,"X","Baby Boomers"))))
summarise(BankCustomerAgeCategorized)
head(BankCustomerAgeCategorized)
BankCustomerAgeCategorized <- transform(BankCustomer, Generation = ifelse(age<22,"Z",ifelse(age<41,"Y",ifelse(age<53,"X","Baby Boomers"))))
head(BankCustomerAgeCategorized)
(BankCustomerAgeCategorized,age=21)
group_by(BankCustomerAgeCategorized,age==21)
ageGroup = group_by(BankCustomerAgeCategorized,age==21)
ageGroup
factanal(BankCustomer$poutcome)
factor(BankCustomer$poutcome)
tail(factor(BankCustomer$poutcome))
library(plyr)
table(BankCustomerAgeCategorized$Generation,BankCustomerAgeCategorized$poutcome)
successPercetageTabel <- table(BankCustomerAgeCategorized$Generation,BankCustomerAgeCategorized$poutcome)
successPercetageTabel <- table(BankCustomerAgeCategorized$Generation,BankCustomerAgeCategorized$poutcome)
successPercetageTabel$success
successPercetageTabel[success]
successPercetageTabel
matrix(successPercetageTabel)
matrix(successPercetageTabel,nrow = 4,ncol = 4)
abc <- matrix(successPercetageTabel,nrow = 4,ncol = 4)
mutate(abc, SuccessPercentage = abc[3,]/abc[1,])
SuccessPercentage = abc[3,]/abc[1,]
SuccessPercentage
SuccessPercentage = abc[,3]/abc[,1]
SuccessPercentage
SuccessPercentage = abc[,3]/abc[,1]*100
SuccessPercentage
vec <- c(1,"hello",TRUE)
vec
successPercetageTabel <- table(BankCustomerAgeCategorized$Generation,BankCustomerAgeCategorized$poutcome)
abc <- matrix(successPercetageTabel,nrow = 4,ncol = 4)
tail(factor(BankCustomer$poutcome))
max(BankCustomer$age)
min(BankCustomer$age)
BankCustomerAgeCategorized <- transform(BankCustomer, Generation = ifelse(age<22,"Z",ifelse(age<41,"Y",ifelse(age<53,"X","Baby Boomers"))))
head(BankCustomerAgeCategorized)
tail(factor(BankCustomer$poutcome))
successPercetageTabel <- table(BankCustomerAgeCategorized$Generation,BankCustomerAgeCategorized$poutcome)
successPercetageTabel
wddir
wd
choose.dir
#abc <- matrix(successPercetageTabel,nrow = 4,ncol = 4)
SuccessPercentage = abc[,3]/abc[,1]*100
BankCustomer<-read.csv("d:/ds/r/rfiles/excels/Bank_Data_3_2.csv")
library(plyr)
max(BankCustomer$age)
min(BankCustomer$age)
BankCustomerAgeCategorized <- transform(BankCustomer, Generation = ifelse(age<22,"Z",ifelse(age<41,"Y",ifelse(age<53,"X","Baby Boomers"))))
head(BankCustomerAgeCategorized)
tail(factor(BankCustomer$poutcome))
successPercetageTabel <- table(BankCustomerAgeCategorized$Generation,BankCustomerAgeCategorized$poutcome)
successPercetageTabel
#abc <- matrix(successPercetageTabel,nrow = 4,ncol = 4)
SuccessPercentage = abc[,3]/abc[,1]*100
#abc <- matrix(successPercetageTabel,nrow = 4,ncol = 4)
SuccessPercentage = abc[,3]/abc[,1]*100
abc <- matrix(successPercetageTabel,nrow = 4,ncol = 4)
SuccessPercentage = abc[,3]/abc[,1]*100
SuccessPercentage
successPercetageTabel
setwd(choose.dir())
